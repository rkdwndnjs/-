# 201 비트코인
# def print_coins(a):
#     for i in range(100):
#         print(a)
#
#
# print_coins("비트코인")


# def hello():
#     print("Hi")
#
# hello()

# print("A")
# def message1() :
#     print("B")
# print("C")
# def message2() :
#     print("D")
# message1()
# print("E")
# message2()
# ACBED
#
# def 함수(문자열) :
#     print(문자열)
#
# 함수("안녕")
# 함수("Hi")
# def 함수(a, b) :
#     print(a + b)
#
# 함수("안녕", 3)


# def print_with_smile(a):
#     print(a+":D")
#
# print_with_smile("안녕하세요")
#
#
# def print_upper_print(a):
#     print(a*1.3)


# def print_sum(a,b):
#     print(a+b)
#
# print_sum(3,4)

#
#
# def print_arithmetic_operation(a,b):
#     print(a,"+",b ,"=",a+b)
#     print(a,"-",b, "=",a-b)
#     print(a,"*",b, "=",a*b)
#     print(a,"+",b,"=",a/b)
#
#
# print_arithmetic_operation(3, 4)


# def print_max(a,b,c):
#     if a>b and a>c:
#         print(a)
#     elif b>a and b>c:
#         print(b)
#     else:
#         print(c)
#
# print_max(1,12,4)

# def print_reverse(a):
#     print(a[::-1])
#
#
# print_reverse('python')

# def print_score(a):
#     print(sum(a)/len(a))
#
#
# print_score ([1, 2, 3])
# def print_even(a):
#     for i in a:
#         if i%2 == 0:
#             print(i)
#
#
# print_even ([1, 3, 2, 10, 12, 11, 15])


# def print_keys(a):
#     for i in a:
#         print(i)
#
#
# print_keys ({"이름":"김말똥", "나이":30, "성별":0})

# my_dict = {"10/26" : [100, 130, 100, 100],
#            "10/27" : [10, 12, 10, 11]}
# def print_value_by_key(a,b):
#     print(a[b])
#
#
# print_value_by_key  (my_dict, "10/26")

# def print_5xn(a):
#     for i in a:
#         print(i, end = '')
#
# print_5xn("아이엠어보이유알어걸")
#
# def pickup_even(a):
#      return list(filter(lambda x: x%2 == 0 , a))
#
#
# pickup_even([3, 4, 5, 6, 7, 8])



class Fourcal:
    def __init__(self):
        self.a = 0
        self.b = 0

    def setdata(self, a, b):
        self.a = a
        self.b = b

    def add(self):
        return self.a + self.b

    def sub(self):
        return self.a - self.b

    def mul(self):
        return self.a * self.b

    def div(self):
        return self.a / self.b

class MoreFourcal(Fourcal):
    def pow(self):
        return self.a ** self.b

    def div(self):
        if self.b == 0:
            return 0
        else:
            return super().div()

mcal = MoreFourcal()
mcal.setdata(4,3)
print(mcal.div())
