# def print_kwargs(**kwargs):
#     print(kwargs)
#
# print_kwargs(a = 1 , b ="banana")

# 셀프 넘버 문제
# def d(n):
#     n = n+sum(map(int,str(n)))
#     return n
#
# n_self_num = set()
# for i in range(1,10001):
#     n_self_num.add(d(i))
# for j in range(1,10001):
#     if j not in n_self_num:
#         print(j)


# 한수 문제
# .1
# def han_number(n):
#     b = 0
#     if n<100:
#         print(99)
#     elif 1000 >n >=100 and n//100 - n % 100 == n % 100 - n % 10:
#         print(b)
#     else:
#         print(99)
# .2
# def ishansu(n):
#     cut = 0
#     for i in range(1, n + 1):
#         if i < 100:
#             cut += 1
#         elif i % 10 - i //10%10 == i//10%10 - i//10//10:
#             cut += 1
#     print(cut)
# n = int(input())
# ishansu(n)
# 프로그래머스 로또의 최고순위와 최저순위

lottos = [44, 1, 0, 0, 31, 25]
win_number = [31, 10, 45, 1, 6, 19]

def solution(lottos,win_numbeer):
    rank = [6,6,5,4,3,2,1,]
    a = len(set(lottos) & set(win_numbeer)) + lottos.count(0)
    b = len(set(lottos) & set(win_numbeer))
    answer = [rank[a],rank[b]]
    return answer
print(solution(lottos,win_number))
solution(lottos,win_number)
